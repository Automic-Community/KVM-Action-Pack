*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        Restore_KVM_VMS
Default Tags
Test Template     Restore KVM VMS Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    Source_File             Bypass_Cache    Restore_State
Restore VM with valid xml path and default values
                      [Tags]    main_scenarios
                      OK        ${Source_File_Path1}    NO              Empty

Restore VM with valid xml path and bypass cache and restore status Paused
                      [Tags]    main_scenarios
                      OK        ${Source_File_Path2}    YES             Paused

Restore VM with valid xml path and restore status saved
                      [Tags]    main_scenarios
                      OK        ${Source_File_Path3}    NO              Running

Invalid test for invalid path used to restore VM
                      NOK       Invalid                 NO              Empty

Invalid test for VM already running and restoring it.
                      NOK       ${Source_File_Path1}    NO              Empty

Mandatory test for Source file required to restore VM
                      NOK       ${Empty}                NO              Empty

*** Keywords ***
Startup
    Log    *******Start Test "RESTORE KVM VM"*******
    Log    *******Connect to AE*******
    Connect AE

Restore KVM VMS Template
    [Arguments]    ${OK_NOK}    ${Source_File}    ${Bypass_Cache}    ${Restore_State}
    [Documentation]    This test restore a VM as per specified parameter value
    ...    _Precondition :- To run this test suit Unix Agent is configured and running and atleast on VM should be there to delete
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK. Value of this variable should be OK or NOK.
    ...    -${Source_File}: Provide source file name including full path to restore.
    ...    -${Bypass_Cache}: Specify whether if you want to avoid file system cache while restoring.
    ...    -${Restore_State}: Specify VM state to be set after restoring.
    Generate String
    Init Action    ${_RESTORE_KVM_VM_ACTION}
    Run Keyword If    '${Source_File}' == 'Invalid'    Action Set    &UC4RB_KVM_SOURCE_FILE#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_KVM_SOURCE_FILE#    ${Source_File}
    Action Set    &UC4RB_KVM_SKIP_CACHE#    ${Bypass_Cache}
    Action Set    &UC4RB_KVM_RESTORE_STATE#    ${Restore_State}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure

Teardown
    Log    *******End Test "RESTORE KVM VM"*******
