*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        Create_KVM_VMS
Test Template     Create_KVM_VMS Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    VM_Name           OS_Type     Description    Memory    CPUs    Disk_Path       Disk_Size    Image_Location       Configuration
Valid Test to Create KVM VM with default value
                      [Tags]    main_scenarios
                      OK        ${My_New_VM}      ${EMPTY}    ${EMPTY}       512       1       ${Disk_Path}    1            ${Image_Location}    ${EMPTY}

Invalid test to create KVM VM with already existing VM name
                      [Tags]    main_scenarios
                      NOK       ${VM_Name}        ${EMPTY}    ${EMPTY}       512       1       ${Disk_Path}    1            ${Image_Location}    ${EMPTY}

Asserting Mandatory field VM Name
                      NOK       ${EMPTY}          ${EMPTY}    ${EMPTY}       512       1       ${Disk_Path}    1            ${Image_Location}    ${EMPTY}

Asserting Mandatory field Disk Path
                      NOK       ${My_New_VM}      ${EMPTY}    ${EMPTY}       512       1       ${EMPTY}        1            ${Image_Location}    ${EMPTY}

Asserting Mandatory field Image Location
                      NOK       ${My_New_VM}      ${EMPTY}    ${EMPTY}       512       1       ${Disk_Path}    1            ${EMPTY}             ${EMPTY}

Invalid Disk path test
                      NOK       ${My_New_VM}      ${EMPTY}    ${EMPTY}       512       1       Invalid         1            ${EMPTY}             ${EMPTY}

Invalid Image Location test
                      NOK       ${My_New_VM}      ${EMPTY}    ${EMPTY}       512       1       ${Disk_Path}    1            Invalid              ${EMPTY}

*** Keywords ***
Startup
    Log    *******Start Test "CREATE KVM VMs"*******
    Log    *******Connect to AE******
    Connect AE

Create_KVM_VMS Template
    [Arguments]    ${OK_NOK}    ${VM_Name}    ${OS_Type}    ${Description}    ${Memory}    ${CPUs}
    ...    ${Disk_Path}    ${Disk_Size}    ${Image_Location}    ${Configuration}
    [Documentation]    This test Create a VM as per specified parameter value
    ...    _Precondition :- To run this test suit Unix Agent is configured and running
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK. Value of this variable should be OK or NOK.
    ...    -${VM_Name}: This field provide name of the new guest virtual machine instance.
    ...    -${OS_Type}: This field provide type of the operating system to be created. If empty KVM will try to identify from image
    ...    -${Description}: This field provide short description to new VM.
    ...    -${Memory}: This field provide memory to allocate for guest instance in megabytes.
    ...    -${CPUs}: This field provide number of virtual CPUs to configure for the guest.
    ...    -${Disk_Path}: This field specify media to use as storage for the guest, with various options. Can be Path or.
    ...    -${Disk_Size}: This field specify size of the disk to be used by VM.
    ...    -${Image_Location}: This field provide location of the image to be used. Can be on directory, ftp, http etc.
    ...    -${Configuration}: This field specifies more options which can be appended to the command. E.g.: -graphics vnc
    Generate String
    Init Action    ${_CREATE_KVM_VM_ACTION}
    Action Set    &UC4RB_KVM_VM_NAME#    ${VM_Name}
    Action Set    &UC4RB_KVM_OS_TYPE#    ${OS_Type}
    Action Set    &UC4RB_KVM_DESCRIPTION#    ${Description}
    Action Set    &UC4RB_KVM_MEMORY#    ${Memory}
    Action Set    &UC4RB_KVM_CPUS#    ${CPUs}
    run Keyword If    '${Disk_Path}' == 'Invalid'    Action Set    &UC4RB_KVM_DISK_PATH#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_KVM_DISK_PATH#    ${Disk_Path}
    Action Set    &UC4RB_KVM_DISK_SIZE#    ${Disk_Size}
    run Keyword If    '${Image_Location}' == 'Invalid'    Action Set    &UC4RB_KVM_IMAGE_LOCATION#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_KVM_IMAGE_LOCATION#    ${Image_Location}
    Action Set    &UC4RB_KVM_CONFIGURATION#    ${Configuration}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure

Teardown
    Log    *******End Test "CREATE KVM VMS"*******
